cat('\r',round(100*i/nt),"%")
flush.console()
# Initialize start and count to read one timestep of the variable.
start        <- rep(1,ndims)	# begin with start=(1,1,1,...,1)
start[ndims] <- subt[i]	      # change to start=(1,1,1,...,i) to read timestep i
count        <- varsize	      # begin w/count=(nx,ny,nz,...,nt), reads entire var
count[ndims] <- 1	            # change to count=(nx,ny,nz,...,1) to read 1 tstep
tmpdat       <- ncvar_get( ncIN, varIN, start=start, count=count )
val[,,i]     <- tmpdat[xi_range,eta_range]
}
cat("\n")
return(list(var = varIN, lat =lat, lon = lon ,time = t[subt],val=val ))
}
remote_main  <- "/gscratch/bumblereem/roms_for_public"
remotefolder  <- paste0("kkari@mox.hyak.uw.edu:",remote_main)
paste0("rsync -avz --dry-run --include='**/Level*/*ACLIM*.nc' --include='*/' --exclude='*' ",remotefolder," ",localfolder)
(paste0("rsync -avz --dry-run --include='**/Level*/*ACLIM*.nc' --include='*/' --exclude='*' ",remotefolder," ",localfolder))
redownload_level3_mox
# SETUP WORKSPACE
tmstp  <- format(Sys.time(), "%Y_%m_%d")
main   <- getwd()  #"~/GitHub_new/ACLIM2"
# loads packages, data, setup, etc.
source("R/make.R")
tmstp  <- format(Sys.time(), "%Y_%m_%d")
main   <- getwd()  #"~/GitHub_new/ACLIM2"
# loads packages, data, setup, etc.
source("R/make.R")
# --------------------------------------
### To re download data from mox (Kirstin) switch "redownload_level3_mox" to TRUE in setup.R
# Accessing ROMSNPZ on mox (hyak UW)
# If you have a UW ID and are authorized on
# hyak (can do this through myUW.com, under settings>computing):
remote_main  <- "/gscratch/bumblereem/roms_for_public"
remotefolder  <- paste0("kkari@mox.hyak.uw.edu:",remote_main)
redownload_level3_mox
redownload_level3_mox<-T
remotefolder
cat((paste0("rsync -avz --progress --include='**/Level*/*ACLIM*.nc' --include='*/' --exclude='*' ",remotefolder," ",localfolder)))
dir("/Users/kholsman/GitHub_new/ACLIM2/Data/in/Newest/roms_for_aclim")
dir("/Users/kholsman/GitHub_new/ACLIM2/Data/in/Newest/")
(paste0("rsync -avz --dry-run --include='**/Level*/*ACLIM*.nc' --include='*/' --exclude='*' ",remotefolder," ",localfolder))
fldr_mox      <- read.csv("Data/in/fldr_mox_list.csv")
fldr_mox
tmstp
dir("Data")
dir("Data/in")
paste0("Data/inarchived/remote_main_",tmstp)
?dir.copy
?dir.copy
remote_main
localfolder
paste0("cp ",localfolder,"  ",localfolder," ../archived")
tmstp
local_fl
local_fl
localfolder
paste0("cp ",localfolder,"  ",localfolder," ../archived",remote_fl,tmstp)
paste0("cp ",localfolder,"  ",localfolder," ../archived/",remote_fl,tmstp)
dir("/Users/kholsman/GitHub_new/ACLIM2/Data/in/Newest/roms_for_aclim ../archived/")
dir("/Users/kholsman/GitHub_new/ACLIM2/Data/in/Newest/roms_for_aclim../archived/")
dir("/Users/kholsman/GitHub_new/ACLIM2/Data/in/Newest/roms_for_aclim/../")
dir("/Users/kholsman/GitHub_new/ACLIM2/Data/in/Newest/roms_for_aclim/../../")
paste0("cp ",localfolder,"  ",localfolder,"/../../archived/",remote_fl,tmstp)
dir("/Users/kholsman/GitHub_new/ACLIM2/Data/in/Newest/roms_for_aclim/../../archived/")
localfolder
system (paste0("cp ",localfolder,"  ",localfolder,"/../../archived/",remote_fl,tmstp))
paste0("cp -R ",localfolder,"  ",localfolder,"/../../archived/",remote_fl,tmstp)
system (paste0("cp -R ",localfolder,"  ",localfolder,"/../../archived/",remote_fl,tmstp))
system (paste0("cp -R ",localfolder,"  ",localfolder,"/../../archived/",remote_fl,tmstp))
localfolder
system (paste0("cp -R ",localfolder,"/",remote_fl,"  ",localfolder,"/../../archived/",remote_fl,tmstp))
system (paste0("cp -R ",localfolder,"/",remote_fl,"  ",localfolder,"/../../archived/",remote_fl,tmstp))
remote_fl
localfolder
system (paste0("cp -R ",localfolder,"  ",localfolder,"/../../archived/",remote_fl,tmstp))
system (paste0("cp -R ",localfolder,"  ",localfolder,"/../../archived/",remote_fl,tmstp))
tmstp
localfolder
system (paste0("rm -r ",localfolder)
}
system (paste0("rm -r ",localfolder)
0
paste0("system( rm -r ",localfolder))
paste0("system( rm -r ",localfolder,")")
paste0( "rm -r ",localfolder)
txt<- paste0( "rm -r ",localfolder)
system(txt)
dir.create(localfolder)
fldr_mox
i<1
i<-1
dir.create(file.path(localfolder,fldr_mox[i]))
fldr_mox[i]
fldr_mox[i]
fldr_mox      <- read.csv("Data/in/fldr_mox_list.csv",header=F)
fldr_mox[1,]
fldr_mox      <- read.csv("Data/in/fldr_mox_list.csv",header=F,"string")
?read.csv
fldr_mox      <- read.csv("Data/in/fldr_mox_list.csv",header=F,stringsAsFactors=F)
fldr_mox
fldr_mox[1]
fldr_mox[1,]
cat( (paste0("rsync -avz --progress --include='**/Level3/*forecast*.nc' --include='*/' --exclude='*' ",remotefolder," ",localfolder)))
dir.create(file.path(localfolder,"B10K-K20_CORECFS"))
getwd()
dir("/Users/kholsman/GitHub_new/ACLIM2/Data/in/Newest/roms_for_aclim")
cat( (paste0("rsync -avz --progress --include='**/Level3/*forecast*.nc' --include='*/' --exclude='*' ",remotefolder," ",localfolder)))
cat( (paste0("rsync -avz --progress --include='**/Level3/*coldpool*.nc' --include='*/' --exclude='*' ",remotefolder," ",localfolder)))
cat((paste0("rsync -avz --progress --include='**/Level*/*ACLIM*.nc' --include='*/' --exclude='*' ",remotefolder," ",localfolder)))
remote_fl
dir.rename()
file.rename("Data/in/Newest/test","Data/in/Newest/test2")
local_fl
localfolder
cat((paste0("rsync -avz --progress --include='**/Level*/*ACLIM*.nc' --include='*/' --exclude='*' ",remotefolder," ",local_fl)))
cat((paste0("rsync -avz --progress --include='**/Level*/*ACLIM*.nc' --include='*/' --exclude='*' ",remotefolder," ",local_fl)))
cat( (paste0("rsync -avz --progress --include='**/Level3/*coldpool*.nc' --include='*/' --exclude='*' ",remotefolder," ",local_fl)))
cat( (paste0("rsync -avz --progress --include='**/Level3/*forecast*.nc' --include='*/' --exclude='*' ",remotefolder," ",local_fl)))
local_fl
rsync -avz --progress --include='**/Level3/*coldpool*.nc' --include='*/' --exclude='*' kkari@mox.hyak.uw.edu:/gscratch/bumblereem/roms_for_public /Users/kholsman/GitHub_new/ACLIM2/Data/in/Newest
#source("R/make.R")       # loads packages, data, setup, etc.
knitr::opts_chunk$set(echo = T, fig.align="center")
thisYr <- format(Sys.time(), "%Y")
today  <- format(Sys.time(), "%b %d, %Y")
# --------------------------------------
# SETUP WORKSPACE
tmstp  <- format(Sys.time(), "%Y_%m_%d")
main   <- getwd()  #"~/GitHub_new/ACLIM2"
# loads packages, data, setup, etc.
suppressWarnings(source("R/make.R"))
# --------------------------------------
getwd()
main
dir("R")
#source("R/make.R")       # loads packages, data, setup, etc.
knitr::opts_chunk$set(echo = T, fig.align="center")
thisYr <- format(Sys.time(), "%Y")
today  <- format(Sys.time(), "%b %d, %Y")
# --------------------------------------
# SETUP WORKSPACE
tmstp  <- format(Sys.time(), "%Y_%m_%d")
main   <- getwd()  #"~/GitHub_new/ACLIM2"
# loads packages, data, setup, etc.
suppressWarnings(source("../R/make.R"))
dir()
main
# loads packages, data, setup, etc.
suppressWarnings(source(file.path(main,"../R/make.R")))
file.path(main,"../")
dir(file.path(main,"../"))
dir(file.path(main,"../R"))
setwd("../")
# loads packages, data, setup, etc.
suppressWarnings(source(file.path(main,"R/make.R")))
setwd(main)
setwd("../")
# loads packages, data, setup, etc.
suppressWarnings(source("R/make.R"))
setwd(main)
localfolder
seasons
load("/Users/kholsman/Documents/GitHub/futR/data/in/rec_dat.Rdata")
head(rec_dat)
# SETUP WORKSPACE
tmstp  <- format(Sys.time(), "%Y_%m_%d")
main   <- getwd()  #"~/GitHub_new/ACLIM2
source("R/make.R")
source("R/sub_scripts/load_maps.R")  # skip this for faster load
traceback()
lib_list <- c(
# these for ggplot mapping:
"raster",
"ggspatial",             # used for N arrow and scale bar
"sf",                    # used for shapefiles
"rnaturalearth",         # has more shapefiles; used to make the "world" object
"maps",                  # has some state shapefiles, need to be converted with st_as_sf
"akima",                 # Interpolation of Irregularly and Regularly Spaced Data
"rnaturalearthdata",
"rgeos",
"rgdal"
)
# Install missing libraries:
missing <- setdiff(lib_list, installed.packages()[, 1])
if (length(missing) > 0) {
cat(" Loading missing packages, may take 5 mins or less ...\n ")
cat(" ... \n ")
install.packages(missing)
}
# Load libraries:
for(lib in lib_list)
eval(parse(text=paste("library(",lib,")")))
# Load libraries:
for(lib in c(lib_list,"rgdal"))
eval(parse(text=paste("library(",lib,")")))
# check rgdal
if(setdiff("rgdal", installed.packages()[, 1]))
# check rgdal
missing <- setdiff("rgdal", installed.packages()[, 1])
missing
# Load libraries:
for(lib in c(lib_list,"rgdal"))
source("~/Documents/GitHub/ACLIM2/R/sub_scripts/load_maps.R")
traceback()
dir(geotif_dir)
ocean_bot    <-  raster::brick(file.path(geotif_dir,"OB_LR/OB_LR.tif"))
ocean_bot    <-  raster::brick(file.path(geotif_dir,"OB_LR.tif"))
source("~/Documents/GitHub/ACLIM2/R/sub_scripts/load_maps.R")
traceback()
lib_list <- c(
# these for ggplot mapping:
"raster",
"ggspatial",             # used for N arrow and scale bar
"sf",                    # used for shapefiles
"rnaturalearth",         # has more shapefiles; used to make the "world" object
"maps",                  # has some state shapefiles, need to be converted with st_as_sf
"akima",                 # Interpolation of Irregularly and Regularly Spaced Data
"rnaturalearthdata",
"rgeos"
)
# Install missing libraries:
missing <- setdiff(lib_list, installed.packages()[, 1])
if (length(missing) > 0) {
cat(" Loading missing packages, may take 5 mins or less ...\n ")
cat(" ... \n ")
install.packages(missing)
}
# check rgdal
missing <- setdiff("rgdal", installed.packages()[, 1])
if (length(missing) > 0)
install.packages("rgdal", type="binary")
# Load libraries:
for(lib in c(lib_list,"rgdal"))
eval(parse(text=paste("library(",lib,")")))
## same for git libraries
lib_list_git <- c("rnaturalearthhires")
missing <- setdiff(lib_list_git, installed.packages()[, 1])
#since each github library has custom address, need to look for each one
if ("rnaturalearthhires"%in%missing) devtools::install_github("ropensci/rnaturalearthhires")
# Load libraries:
for(lib in lib_list_git)
eval(parse(text=paste("library(",lib,")")))
#_______________________________________
# Now get map layers from the web, first time through only
#_______________________________________
source("R/sub_scripts/Get_map_layers.R")
#_______________________________________
# Read base map layers
#_______________________________________
# NASA data files: neo.sci.gsfc.nasa.gov
marble       <-  raster::brick(file.path(geotif_dir,"blue_marble.tif"))
# limit shapefile:
limit        <-  sf::st_read(file.path(shp_dir,"global/CNTR_RG_03M_2014/CNTR_RG_03M_2014.shp"))
ocean110     <-  sf::st_read(file.path(shp_dir,"global/natural_earth_vector/110m_physical/ne_110m_ocean.shp"))
ocean50      <-  sf::st_read(file.path(shp_dir,"global/natural_earth_vector/50m_physical/ne_50m_ocean.shp"))
bathy1000    <-  sf::st_read(file.path(shp_dir,"global/ne_10m_bathymetry_J_1000/ne_10m_bathymetry_J_1000.shp"))
bathy200     <-  sf::st_read(file.path(shp_dir,"global/ne_10m_bathymetry_K_200/ne_10m_bathymetry_K_200.shp"))
ocean_bot    <-  raster::brick(file.path(geotif_dir,"OB_LR.tif"))
# rnaturalearth files
world 		   <-  rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")
# class(world)
world        <-  sf::st_as_sf(map('world', plot = FALSE, fill = TRUE))
#world
world_df     <-  map_data("world")
states 		   <-  rnaturalearth::ne_states(country = c('United States of America',"Canada","Mexico"), returnclass = "sf" ) ; class(states)
#_______________________________________
# Now set up some things
#_______________________________________
# set up epsg
#-------------------------------------------
epsg_bering       <- 3571  #(WGS84)
epsg_NAM          <- 4269
epsg_arctic       <- 3995
epsg_antarctic    <- 3031
arctic_lat_lim    <- 45
antarctic_lat_lim <- -40
crs_bering        <-  paste0("+init=epsg:",epsg_bering)
crs_arctic        <-  paste0("+init=epsg:",epsg_arctic)
crs_antarctic     <-  paste0("+init=epsg:",epsg_antarctic)
arctic_extent     <- c(-180,180,45,90)
antarctic_extent  <- c(-180,180,-88,-45)
# set up preferred projections
#-------------------------------------------
polar_proj        <- ""
nam_proj          <- ""
# coordinate systems
#-------------------------------------------
bering_coord   <-  CRS("+init=epsg:3571")
polar_coord    <-  CRS("+init=epsg:3995")
longlat_coord  <-  CRS("+init=epsg:4326")
NAM_coord      <-  CRS("+init=epsg:4269")
#EPSG           <-  rgdal::make_EPSG()
# base maps
#-------------------------------------------
bering_land       <-  limit[limit$CNTR_ID%in%c("RU", "US", "CA" ),]%>% st_transform(epsg_bering)
bering_countries  <-  world[world$ID%in%c("Norway","Sweden", "Finland", "Russia", "USA", "Canada" , "Greenland", "Iceland" ),]
bering_land       <- sf::st_buffer(bering_land, dist = 0)
bering_ocean110   <- ocean110 %>% st_transform(epsg_bering)
bering_ocean110   <- sf::st_buffer(bering_ocean110, dist = 0)
#  bering_ocean110   <- st_intersection( st_transform(bering_ocean110,crs=crs_bering),st_transform(ring_N,crs=crs_bering))
# Arctic shapfile of land masses:
bering_sf         <- sf::st_as_sf(
sp::spTransform(
raster::crop(ne_countries(scale = "large", type = 'map_units'),
clip_spdt(lon_lim=c(-143,-180),lat_lim=c(52,70)) ), sp::CRS(crs_bering)))
#bering_sf         <- st_intersection( st_transform(bering_sf,crs=crs_bering),st_transform(ring_N,crs=crs_bering))
bering_ocean110   <- ocean110 %>% st_transform(epsg_bering)
bering_ocean110   <- sf::st_buffer(bering_ocean110, dist = 0)
# Arctic shapfile of land masses:
bering_sf         <- sf::st_as_sf(
sp::spTransform(
raster::crop(ne_countries(scale = "large", type = 'map_units'),
clip_spdt(lon_lim=c(-143,-180),lat_lim=c(52,70)) ), sp::CRS(crs_bering)))
crs_bering
st_intersection( st_transform(bering_sf,crs=crs_bering),st_transform(ring_N,crs=crs_bering))
sp::CRS(crs_bering)
CRS(ne_countries())
CRS(ne_countries(scale = "large", type = 'map_units'))
clip_spdt
sp::spTransform(
raster::crop(ne_countries(scale = "large", type = 'map_units'),
clip_spdt(lon_lim=c(-143,-180),lat_lim=c(52,70)) ), sp::CRS(crs_bering))
raster::crop(ne_countries(scale = "large", type = 'map_units'),
clip_spdt(lon_lim=c(-143,-180),lat_lim=c(52,70)) )
test<- raster::crop(ne_countries(scale = "large", type = 'map_units'),
clip_spdt(lon_lim=c(-143,-180),lat_lim=c(52,70)) ), sp::CRS(crs_bering)
test<- raster::crop(ne_countries(scale = "large", type = 'map_units'),
clip_spdt(lon_lim=c(-143,-180),lat_lim=c(52,70)) )
test
plot(test)
sp::CRS(crs_bering)
sp::spTransform()
?sp::spTransform
sp::spTransform(
raster::crop(ne_countries(scale = "large", type = 'map_units'),
clip_spdt(lon_lim=c(-143,-180),lat_lim=c(52,70)) ), CRSobj=sp::CRS(crs_bering) )
crs_bering
tt <- raster::crop(ne_countries(scale = "large", type = 'map_units'),
clip_spdt(lon_lim=c(-143,-180),lat_lim=c(52,70)) )
sp::spTransform(tt, crs_bering )
tt <- raster::crop(ne_countries(scale = "large", type = 'map_units'),
clip_spdt(lon_lim=c(-143,-180),lat_lim=c(52,70)) )
bering_sf         <- sf::st_as_sf( sp::spTransform(tt, crs_bering ) )
bering_sf
bering_sf         <- sf::st_as_sf( sp::spTransform(tt, CRSobj=sp::CRS(crs_bering) ) )
bering_sf
# Arctic shapfile of land masses:
tt <- raster::crop(ne_countries(scale = "large", type = 'map_units'),
clip_spdt(lon_lim=c(-143,-180),lat_lim=c(52,70)) )
bering_sf         <- sf::st_as_sf( sp::spTransform(tt, CRSobj=sp::CRS(crs_bering) ) )
#bering_sf         <- st_intersection( st_transform(bering_sf,crs=crs_bering),st_transform(ring_N,crs=crs_bering))
# same but as outlines:
bering_l          <- bering_sf%>%st_cast("MULTILINESTRING")
source("R/sub_scripts/load_maps.R")  # skip this for faster load
source("R/sub_scripts/load_maps.R")  # skip this for faster load
source("R/sub_scripts/load_maps.R")  # skip this for faster load
# SETUP WORKSPACE
tmstp  <- format(Sys.time(), "%Y_%m_%d")
main   <- getwd()  #"~/GitHub_new/ACLIM2
source("R/make.R")
source("R/sub_scripts/load_maps.R")  #
cat("\n\n*** Ignore warnings: Maps and packages loaded correctly***\n")
ls()
weekly_vars
srvy_vars
suppressWarnings(source("R/sub_scripts/load_maps.R")) # skip this for faster load
suppressWarnings(source("R/make.R"))
rmd2md("GettingStarted_Bering10K_ROMSNPZ","README")
modset
models
ls()
modeLIST
all_info1
all_info2
getwd()
~/GitHub_new/ACLIM2
getwd()
dir()
setwd("Vignettes")
main   <- "~/GitHub_new/ACLIM2"
# loads packages, data, setup, etc.
suppressWarnings(source("R/make.R"))
#source("R/make.R")       # loads packages, data, setup, etc.
knitr::opts_chunk$set(echo = T, fig.align="center",warning = FALSE, message = FALSE)
knitr::opts_knit$set(root.dir = '../')
thisYr <- format(Sys.time(), "%Y")
today  <- format(Sys.time(), "%b %d, %Y")
# --------------------------------------
# SETUP WORKSPACE
tmstp  <- format(Sys.time(), "%Y_%m_%d")
main   <- getwd()  #"~/GitHub_new/ACLIM2"
main   <- "~/GitHub_new/ACLIM2"
setwed(main)
#source("R/make.R")       # loads packages, data, setup, etc.
knitr::opts_chunk$set(echo = T, fig.align="center",warning = FALSE, message = FALSE)
knitr::opts_knit$set(root.dir = '../')
thisYr <- format(Sys.time(), "%Y")
today  <- format(Sys.time(), "%b %d, %Y")
# --------------------------------------
# SETUP WORKSPACE
tmstp  <- format(Sys.time(), "%Y_%m_%d")
main   <- getwd()  #"~/GitHub_new/ACLIM2"
main   <- "~/GitHub_new/ACLIM2"
setwd(main)
main   <- "~/GitHub_new/ACLIM2"
setwd(main)
main
dir(~/ACLIM2)
dir("~/ACLIM2")
info1
ls()
info
suppressWarnings(source("R/make.R"))
suppressWarnings(source("../R/make.R"))
getwD()
getwd()
dir("../")
source("../R/make.R")
# loads packages, data, setup, etc.
setwd("../")
suppressWarnings(source("R/make.R"))
info_1
all_info1
simlist
sim_list <- c("B10K-K20_CORECFS",
"B10K-H16_CMIP5_CESM_BIO_rcp85",
"B10K-H16_CMIP5_CESM_rcp45",
"B10K-H16_CMIP5_CESM_rcp85",
"B10K-H16_CMIP5_GFDL_BIO_rcp85",
"B10K-H16_CMIP5_GFDL_rcp45",
"B10K-H16_CMIP5_GFDL_rcp85",
"B10K-H16_CMIP5_MIROC_rcp45",
"B10K-H16_CMIP5_MIROC_rcp85",
"B10K-H16_CORECFS",
# "B10K-K20P19_CMIP5_CESM_rcp45",
# "B10K-K20P19_CMIP5_CESM_rcp85",
# "B10K-K20P19_CMIP5_GFDL_rcp45",
# "B10K-K20P19_CMIP5_GFDL_rcp85",
# "B10K-K20P19_CMIP5_MIROC_rcp45",
# "B10K-K20P19_CMIP5_MIROC_rcp85",
"B10K-K20P19_CMIP6_cesm_historical",
"B10K-K20P19_CMIP6_cesm_ssp126",
"B10K-K20P19_CMIP6_cesm_ssp585",
"B10K-K20P19_CMIP6_gfdl_historical",
"B10K-K20P19_CMIP6_gfdl_ssp126",
"B10K-K20P19_CMIP6_gfdl_ssp585",
"B10K-K20P19_CMIP6_miroc_historical",
"B10K-K20P19_CMIP6_miroc_ssp126",
"B10K-K20P19_CMIP6_miroc_ssp585")
silist
simlist
scenarios
scenarios<-sim_list
sim_list
sim_list
?results
cat(sim_list)
data.frame(sim_list)
tibble::as_tibble(sim_list)
tibble::as_tibble(data.frame(sim_list))
all_info2
head(data.frame(sim_list))
print(getwd())
# loads packages, data, setup, etc.
#suppressWarnings(source("R/make.R"))
# loads packages, data, setup, etc.
setwd("../")
suppressWarnings(source("R/make.R"))
tmstp  <- format(Sys.time(), "%Y_%m_%d")
main   <- getwd()  #"~/GitHub_new/ACLIM2"
print(getwd())
# loads packages, data, setup, etc.
#suppressWarnings(source("R/make.R"))
# loads packages, data, setup, etc.
setwd("../")
suppressWarnings(source("R/make.R"))
getwd()
setwd("ACLIM2")
setwd("/Users/kholsman/Documents/GitHub/ACLIM2")
# --------------------------------------
# SETUP WORKSPACE
tmstp  <- format(Sys.time(), "%Y_%m_%d")
main   <- getwd()  #"~/GitHub_new/ACLIM2"
print(getwd())
# loads packages, data, setup, etc.
suppressWarnings(source("R/make.R"))
# --------------------------------------
path.expand("~/desktop")
path.expand("~/Documents/GitHub/ACLIM2")
# Specify the download directory
main_nm       <- "ACLIM2"
# Note: Edit download_path for preference
download_path <- path.expand("~/desktop")
dest_fldr     <- file.path(download_path,main_nm)
url           <- "https://github.com/kholsman/ACLIM2/archive/main.zip"
dest_file     <- file.path(download_path,paste0(main_nm,".zip"))
download.file(url=url, destfile=dest_file)
# unzip the .zip file
setwd(download_path)
unzip (dest_file, exdir = "./",overwrite = T)
dir(path.expand("~Desktop"))
dir(path.expand("~/Desktop"))
dir(path.expand("~/Desktop"))
main_nm       <- "ACLIM2"
# Note: Edit download_path for preference
download_path <- path.expand("~/Desktop")
dest_fldr     <- file.path(download_path,main_nm)
url           <- "https://github.com/kholsman/ACLIM2/archive/main.zip"
dest_file     <- file.path(download_path,paste0(main_nm,".zip"))
download.file(url=url, destfile=dest_file)
# unzip the .zip file
setwd(download_path)
unzip (dest_file, exdir = "./",overwrite = T)
