count        <- varsize	      # begin w/count=(nx,ny,nz,...,nt), reads entire var
count[ndims] <- 1	            # change to count=(nx,ny,nz,...,1) to read 1 tstep
tmpdat       <- ncvar_get( ncIN, varIN, start=start, count=count )
val[,,i]     <- tmpdat[xi_range,eta_range]
}
return(list(var = varIN, lat =lat, lon = lon ,time = t,val=val ))
}
attributes(nc)
names(nc$var)
t   <- as.POSIXct(
nc$var[["temp"]]$dim[[3]]$vals,
origin = substr(ncIN$var[["temp"]]$dim[[3]]$units,15,36),
tz = "GMT")
t
rm(t)
# subset the lat and lon values
lat    <- ncvar_get(nc, varid = "lat_rho")
lon    <- ncvar_get(nc, varid = "lon_rho")
lat
lat
lon
names(nc$var)
ncvar_get(nc, varid = "lat_psi")
dim(lat)
dim(lat[1,])
lat[1,]
lat[10,]
# available variables:
names(nc$var)
for(i in 1:length(names(nc$var)) print(ncIN$var[[i]]$varsize)
for(i in 1:length(names(nc$var)) print(nc$var[[i]]$varsize)
nc$var[[i]]
for(i in 1:length(names(nc$var))) print(nc$var[[i]]$varsize)
names(nc$var)
mean(lat[1,])
tapply(lat,1,mean)
apply(lat,1,mean)
apply(lat,2,mean)
time
t  <- as.POSIXct(
nc$var[["temp"]]$dim[[3]]$vals,
origin = substr(ncIN$var[["temp"]]$dim[[3]]$units,15,36),
tz = "GMT")
rm(t)
t
time_steps  <- as.POSIXct(
nc$var[["temp"]]$dim[[3]]$vals,
origin = substr(ncIN$var[["temp"]]$dim[[3]]$units,15,36),
tz = "GMT")
time_steps
attributes(time_steps)
substr(time_steps,1,4)
unique(substr(time_steps,1,4))
sort(unique(substr(time_steps,1,4)))
yrs    <- sort(unique(substr(time_steps,1,4)))
yrs
paste(yrs,tr)
# Let's sample the model years as close to Feb 1 and Aug 1 as the model timesteps run:
tr         <- c("-01-1 12:00:00 GMT","-08-1 12:00:00 GMT")  # time_range base
paste(yrs,tr)
paste0(yrs,tr)
length(years)
yrs
length(yrs)
?paste
# Let's sample the model years as close to Aug 1 as the model timesteps run:
tr         <- c("-08-1 12:00:00 GMT")
paste0(yrs,tr)
# create filename:
tmp_fl <- paste0(d,"_",m)
# get the url for the simulation
m_url       <- url_list[url_list$dataset == paste0(m,"/"),]$path
# preview the projection and hindcast data and data catalogs (Level 1, 2, and 3):
m_datasets  <- tds_list_datasets(thredds_url = m_url)
# get Level 2 .nc file URL
m_l2_cat       <- m_datasets[m_datasets$dataset == "Level 2/",]$path
m_l2_datasets  <- tds_list_datasets(m_l2_cat)
m_l2_vT_url    <- m_l2_datasets[m_l2_datasets$dataset == v,]$path
m_flnm         <- strsplit(m_l2_vT_url,split="dataset=")[[1]][2]
m_flnm         <- stringr::str_replace(m_flnm,"Level2_","")
tmpURL <- paste0(paste0(ACLIM_data_url,"dodsC/Level2/"),m_flnm,".nc")
# open the netcdf file remotely
nc     <- nc_open(tmpURL)
# available variables:
names(nc$var)
time_steps  <- as.POSIXct(
nc$var[["temp"]]$dim[[3]]$vals,
origin = substr(ncIN$var[["temp"]]$dim[[3]]$units,15,36),
tz = "GMT")
# get years in simulation
yrs    <- sort(unique(substr(time_steps,1,4)))
tmp_tr <-  paste0(yrs,tr)
# subset the lat and lon values
lat    <- ncvar_get(nc, varid = "lat_rho")
lon    <- ncvar_get(nc, varid = "lon_rho")
#M2 <- (56.87°N, -164.06°W)
# convert the nc files into a long data.frame for each variable
i <- 0
i <- i + 1
tmp_var0      <- get_level2(
ncIN = nc,
varIN = "temp",     # Tinker: try extracting other vars like "NO3", or "uEast"
xi_range  = 1:182,
eta_range = 1:258,
time_range  = tmp_tr)
tmp_var0
dim(tmp_var0)
dimnames(tmp_var0)
names(tmp_var0)
dim(tmp_var0$val)
varlist
s
d
proj_l2_datasets$dataset
var_get
var_get    <- 'temp'
v
m_flnm
m_flnm
tmp_fl
var_get
# rename the object
eval(parse(text =paste0(var_get,"<-tmp_var") ))
tmp_var      <- get_level2(
ncIN = nc,
varIN = var_get,
# Tinker: try extracting other vars like "NO3", or "uEast"
xi_range  = 1:182,
eta_range = 1:258,
time_range  = tmp_tr)
# rename the object
eval(parse(text =paste0(var_get,"<-tmp_var") ))
# save the nc file in the Data/in/Newest/Rdata/ [ simulation]/Level3 folder
tmp_path <- file.path( paste0("Data/in/Newest/Rdata/",m,"/Level2"),paste0(m_flnm,".Rdata"))
tmp_path
file.path( paste0("Data/in/Newest/Rdata/",m,"/Level2"),paste0(m_flnm,"_",var_get,".Rdata"))
for(v in varlist){
# create filename:
tmp_fl <- paste0(d,"_",m)
# get the url for the simulation
m_url       <- url_list[url_list$dataset == paste0(m,"/"),]$path
# preview the projection and hindcast data and data catalogs (Level 1, 2, and 3):
m_datasets  <- tds_list_datasets(thredds_url = m_url)
# get Level 2 .nc file URL
m_l2_cat       <- m_datasets[m_datasets$dataset == "Level 2/",]$path
m_l2_datasets  <- tds_list_datasets(m_l2_cat)
m_l2_vT_url    <- m_l2_datasets[m_l2_datasets$dataset == v,]$path
m_flnm         <- strsplit(m_l2_vT_url,split="dataset=")[[1]][2]
m_flnm         <- stringr::str_replace(m_flnm,"Level2_","")
tmpURL         <- paste0(paste0(ACLIM_data_url,"dodsC/Level2/"),m_flnm,".nc")
# open the netcdf file remotely
nc     <- nc_open(tmpURL)
# available variables:
names(nc$var)
time_steps  <- as.POSIXct(
nc$var[["temp"]]$dim[[3]]$vals,
origin = substr(ncIN$var[["temp"]]$dim[[3]]$units,15,36),
tz = "GMT")
# get years in simulation
yrs    <- sort(unique(substr(time_steps,1,4)))
tmp_tr <-  paste0(yrs,tr)
# subset the lat and lon values
lat    <- ncvar_get(nc, varid = "lat_rho")
lon    <- ncvar_get(nc, varid = "lon_rho")
#M2 <- (56.87°N, -164.06°W)
# convert the nc files into a long data.frame for each variable
tmp_var      <- get_level2(
ncIN = nc,
varIN = var_get,
# Tinker: try extracting other vars like "NO3", or "uEast"
xi_range  = 1:182,
eta_range = 1:258,
time_range  = tmp_tr)
# rename the object
eval(parse(text =paste0(var_get,"<-tmp_var") ))
m_flnm
# save the nc file in the Data/in/Newest/Rdata/ [ simulation]/Level3 folder
tmp_path <- file.path( paste0("Data/in/Newest/Rdata/",m,"/Level2"),paste0(m_flnm,"_",var_get,".Rdata"))
eval(parse(text =paste0("save(",var_get,", file=tmp_path)")))
}
varlist
v
# create filename:
tmp_fl <- paste0(d,"_",m)
# get the url for the simulation
m_url       <- url_list[url_list$dataset == paste0(m,"/"),]$path
# preview the projection and hindcast data and data catalogs (Level 1, 2, and 3):
m_datasets  <- tds_list_datasets(thredds_url = m_url)
# get Level 2 .nc file URL
m_l2_cat       <- m_datasets[m_datasets$dataset == "Level 2/",]$path
m_l2_datasets  <- tds_list_datasets(m_l2_cat)
m_l2_vT_url    <- m_l2_datasets[m_l2_datasets$dataset == v,]$path
m_flnm         <- strsplit(m_l2_vT_url,split="dataset=")[[1]][2]
m_flnm         <- stringr::str_replace(m_flnm,"Level2_","")
tmpURL         <- paste0(paste0(ACLIM_data_url,"dodsC/Level2/"),m_flnm,".nc")
m_flnm
tmpURL
nc     <- nc_open(tmpURL)
proj_l2_datasets$dataset
m_l2_datasets[m_l2_datasets$dataset == v,]$path
varlist
varlist2   <- c("Bottom5m","Surface5m", "Integrated")
m_flnm
(v =="Surface 5m")
if(v =="Surface 5m") m_flnm         <- stringr::str_replace(m_flnm,"surface_5m","surface5m")
m_flnm
tmpURL         <- paste0(paste0(ACLIM_data_url,"dodsC/Level2/"),m_flnm,".nc")
# open the netcdf file remotely
nc     <- nc_open(tmpURL)
for(v in varlist){
# create filename:
tmp_fl <- paste0(d,"_",m)
# get the url for the simulation
m_url       <- url_list[url_list$dataset == paste0(m,"/"),]$path
# preview the projection and hindcast data and data catalogs (Level 1, 2, and 3):
m_datasets  <- tds_list_datasets(thredds_url = m_url)
# get Level 2 .nc file URL
m_l2_cat       <- m_datasets[m_datasets$dataset == "Level 2/",]$path
m_l2_datasets  <- tds_list_datasets(m_l2_cat)
m_l2_vT_url    <- m_l2_datasets[m_l2_datasets$dataset == v,]$path
m_flnm         <- strsplit(m_l2_vT_url,split="dataset=")[[1]][2]
m_flnm         <- stringr::str_replace(m_flnm,"Level2_","")
if(v =="Surface 5m") m_flnm         <- stringr::str_replace(m_flnm,"surface_5m","surface5m")
tmpURL         <- paste0(paste0(ACLIM_data_url,"dodsC/Level2/"),m_flnm,".nc")
# open the netcdf file remotely
nc     <- nc_open(tmpURL)
# available variables:
names(nc$var)
time_steps  <- as.POSIXct(
nc$var[["temp"]]$dim[[3]]$vals,
origin = substr(ncIN$var[["temp"]]$dim[[3]]$units,15,36),
tz = "GMT")
# get years in simulation
yrs    <- sort(unique(substr(time_steps,1,4)))
tmp_tr <-  paste0(yrs,tr)
# subset the lat and lon values
lat    <- ncvar_get(nc, varid = "lat_rho")
lon    <- ncvar_get(nc, varid = "lon_rho")
#M2 <- (56.87°N, -164.06°W)
# convert the nc files into a long data.frame for each variable
tmp_var      <- get_level2(
ncIN = nc,
varIN = var_get,
# Tinker: try extracting other vars like "NO3", or "uEast"
xi_range  = 1:182,
eta_range = 1:258,
time_range  = tmp_tr)
# rename the object
eval(parse(text =paste0(var_get,"<-tmp_var") ))
m_flnm
# save the nc file in the Data/in/Newest/Rdata/ [ simulation]/Level3 folder
tmp_path <- file.path( paste0("Data/in/Newest/Rdata/",m,"/Level2"),paste0(m_flnm,"_",var_get,".Rdata"))
eval(parse(text =paste0("save(",var_get,", file=tmp_path)")))
# close the nc file
nc_close(nc)
}
vv
v
# create filename:
tmp_fl <- paste0(d,"_",m)
# get the url for the simulation
m_url       <- url_list[url_list$dataset == paste0(m,"/"),]$path
# preview the projection and hindcast data and data catalogs (Level 1, 2, and 3):
m_datasets  <- tds_list_datasets(thredds_url = m_url)
# get Level 2 .nc file URL
m_l2_cat       <- m_datasets[m_datasets$dataset == "Level 2/",]$path
m_l2_datasets  <- tds_list_datasets(m_l2_cat)
m_l2_vT_url    <- m_l2_datasets[m_l2_datasets$dataset == v,]$path
m_flnm         <- strsplit(m_l2_vT_url,split="dataset=")[[1]][2]
m_flnm         <- stringr::str_replace(m_flnm,"Level2_","")
if(v =="Surface 5m") m_flnm         <- stringr::str_replace(m_flnm,"surface_5m","surface5m")
tmpURL         <- paste0(paste0(ACLIM_data_url,"dodsC/Level2/"),m_flnm,".nc")
# open the netcdf file remotely
nc     <- nc_open(tmpURL)
# available variables:
names(nc$var)
sub_varlist <- c("temp","temp","EupS")
# Currently available Level 2 variables
ds_list     <- proj_l2_datasets$dataset  # datasets
sub_varlist <- c("temp","temp","EupS")   # variables to pull from each data set
# Tinker: try subbing in other Integrated variables (3rd in the list) like "NCaS"
ds_list     <- proj_l2_datasets$dataset  # datasets
sub_varlist <- list(
"temp",
"temp",
c("EupS","Cop","NCas")   # variables to pull from each data set
)
d<-3
sub_varlist[[d]][1]
time_steps  <- as.POSIXct(
nc$var[[ sub_varlist[[d]][1] ]]$dim[[3]]$vals,
origin = substr(ncIN$var[["temp"]]$dim[[3]]$units,15,36),
tz = "GMT")
var_get <- sub_varlist[[d]][1]
var_get
# convert the nc files into a long data.frame for each variable
tmp_var      <- get_level2(
ncIN = nc,
varIN = var_get,
# Tinker: try extracting other vars like "NO3", or "uEast"
xi_range  = 1:182,
eta_range = 1:258,
time_range  = tmp_tr)
var_get
m_flnm
# rename the object
eval(parse(text =paste0(var_get,"<-tmp_var") ))
# save the nc file in the Data/in/Newest/Rdata/ [ simulation]/Level3 folder
tmp_path <- file.path( paste0("Data/in/Newest/Rdata/",m,"/Level2"),paste0(m_flnm,"_",var_get,".Rdata"))
eval(parse(text =paste0("save(",var_get,", file=tmp_path)")))
for(var_get in sub_varlist[[d]]){
# convert the nc files into a long data.frame for each variable
tmp_var      <- get_level2(
ncIN = nc,
varIN = var_get,
# Tinker: try extracting other vars like "NO3", or "uEast"
xi_range  = 1:182,
eta_range = 1:258,
time_range  = tmp_tr)
# rename the object
eval(parse(text =paste0(var_get,"<-tmp_var") ))
# save the nc file in the Data/in/Newest/Rdata/ [ simulation]/Level3 folder
tmp_path <- file.path( paste0("Data/in/Newest/Rdata/",m,"/Level2"),paste0(m_flnm,"_",var_get,".Rdata"))
eval(parse(text =paste0("save(",var_get,", file=tmp_path)")))
}
var_get
nc$nvars
nc$vars
names(nc$var)
sub_varlist <- list(
"temp",
"temp",
c("EupS","Cop","NCaS") )  # variables to pull from each data set
# Tinker: try subbing in other Integrated variables (3rd in the list)
paste0("rm(",var_get,")")
for(var_get in sub_varlist[[d]]){
# convert the nc files into a long data.frame for each variable
tmp_var      <- get_level2(
ncIN = nc,
varIN = var_get,
# Tinker: try extracting other vars like "NO3", or "uEast"
xi_range  = 1:182,
eta_range = 1:258,
time_range  = tmp_tr)
# rename the object
eval(parse(text =paste0(var_get,"<-tmp_var") ))
# save the nc file in the Data/in/Newest/Rdata/ [ simulation]/Level3 folder
tmp_path <- file.path( paste0("Data/in/Newest/Rdata/",m,"/Level2"),paste0(m_flnm,"_",var_get,".Rdata"))
eval(parse(text =paste0("save(",var_get,", file=tmp_path)")))
eval(parse(text =paste0("rm(",var_get,")") ))
}
# close the nc file
for(d in 1:length(ds_list)){
# create filename:
tmp_fl <- paste0(d,"_",m)
# get the url for the simulation
m_url       <- url_list[url_list$dataset == paste0(m,"/"),]$path
# preview the projection and hindcast data and data catalogs (Level 1, 2, and 3):
m_datasets  <- tds_list_datasets(thredds_url = m_url)
# get Level 2 .nc file URL
m_l2_cat       <- m_datasets[m_datasets$dataset == "Level 2/",]$path
m_l2_datasets  <- tds_list_datasets(m_l2_cat)
m_l2_vT_url    <- m_l2_datasets[m_l2_datasets$dataset == ds_list[d],]$path
m_flnm         <- strsplit(m_l2_vT_url,split="dataset=")[[1]][2]
m_flnm         <- stringr::str_replace(m_flnm,"Level2_","")
if(v =="Surface 5m") m_flnm         <- stringr::str_replace(m_flnm,"surface_5m","surface5m")
tmpURL         <- paste0(paste0(ACLIM_data_url,"dodsC/Level2/"),m_flnm,".nc")
# open the netcdf file remotely
nc     <- nc_open(tmpURL)
# available variables:
names(nc$var)
time_steps  <- as.POSIXct(
nc$var[[ sub_varlist[[d]][1] ]]$dim[[3]]$vals,
origin = substr(ncIN$var[["temp"]]$dim[[3]]$units,15,36),
tz = "GMT")
# get years in simulation
yrs    <- sort(unique(substr(time_steps,1,4)))
tmp_tr <-  paste0(yrs,tr)
# subset the lat and lon values
lat    <- ncvar_get(nc, varid = "lat_rho")
lon    <- ncvar_get(nc, varid = "lon_rho")
#M2 <- (56.87°N, -164.06°W)
for(var_get in sub_varlist[[d]]){
# convert the nc files into a long data.frame for each variable
tmp_var      <- get_level2(
ncIN = nc,
varIN = var_get,
# Tinker: try extracting other vars like "NO3", or "uEast"
xi_range  = 1:182,
eta_range = 1:258,
time_range  = tmp_tr)
# rename the object
eval(parse(text =paste0(var_get,"<-tmp_var") ))
# save the nc file in the Data/in/Newest/Rdata/ [ simulation]/Level3 folder
tmp_path <- file.path( paste0("Data/in/Newest/Rdata/",m,"/Level2"),paste0(m_flnm,"_",var_get,".Rdata"))
eval(parse(text =paste0("save(",var_get,", file=tmp_path)")))
eval(parse(text =paste0("rm(",var_get,")") ))
}
# close the nc file
nc_close(nc)
}
ds_list[d]
# now grab dattat for the hindcast and projection sets:
for(m in c(hind, proj)){
TYPE <- 1
# create the simulation Level3 folder (and overwrite it if overwrite is set to T)
if(!dir.exists(paste0("Data/in/Newest/Rdata/",m)))
dir.create((paste0("Data/in/Newest/Rdata/",m)))
if(!dir.exists(paste0("Data/in/Newest/Rdata/",m,"/Level3")))
dir.create((paste0("Data/in/Newest/Rdata/",m,"/Level3")))
for(d in c(weekly_flnm,survey_rep_flnm)){
# create filename:
tmp_fl <- paste0(d,"_",m)
# create the temporary URL
tmpURL <- paste0(paste0(ACLIM_data_url,"dodsC/",m,"/Level3/"),d,"_",m,".nc")
# open the netcdf file remotely
nc     <- nc_open(tmpURL)
# convert the nc files into a long data.frame for each variable
i <- 0
for(v in varlist){
i <- i + 1
tmp_var0      <- convert2df(ncIN = nc, type = TYPE, varIN = v)
tmp_var0$sim  <- tmp_fl
if(i == 1)
tmp_var     <- tmp_var0
if(i != 1)
tmp_var     <- rbind(tmp_var,tmp_var0)
rm(tmp_var0)
}
head(tmp_var)
# close the nc file
nc_close(nc)
# rename the object
eval(parse(text =paste0(d,"<-tmp_var") ))
# save the nc file in the Data/in/Newest/Rdata/ [ simulation]/Level3 folder
tmp_path <- file.path( paste0("Data/in/Newest/Rdata/",m,"/Level3"),paste0(tmp_fl,".Rdata"))
eval(parse(text =paste0("save(",d,", file=tmp_path)")))
TYPE     <-  TYPE + 1
}
}
# Tinker:add additional projection scenarios here
proj_list  <- proj
# Currently available Level 2 variables
ds_list     <- proj_l2_datasets$dataset  # datasets
sub_varlist <- list(
"temp",
"temp",
c("EupS","Cop","NCaS") )  # variables to pull from each data set
# Tinker: try subbing in other Integrated variables (3rd in the list)
# Let's sample the model years as close to Aug 1 as the model timesteps run:
tr         <- c("-08-1 12:00:00 GMT")
# now grab dattat for the hindcast and projection sets:
for(m in c(hind, proj)){
# create the simulation Level3 folder (and overwrite it if overwrite is set to T)
if(!dir.exists(paste0("Data/in/Newest/Rdata/",m)))
dir.create((paste0("Data/in/Newest/Rdata/",m)))
if(!dir.exists(paste0("Data/in/Newest/Rdata/",m,"/Level2")))
dir.create((paste0("Data/in/Newest/Rdata/",m,"/Level2")))
for(d in 1:length(ds_list)){
# create filename:
tmp_fl <- paste0(d,"_",m)
# get the url for the simulation
m_url       <- url_list[url_list$dataset == paste0(m,"/"),]$path
# preview the projection and hindcast data and data catalogs (Level 1, 2, and 3):
m_datasets  <- tds_list_datasets(thredds_url = m_url)
# get Level 2 .nc file URL
m_l2_cat       <- m_datasets[m_datasets$dataset == "Level 2/",]$path
m_l2_datasets  <- tds_list_datasets(m_l2_cat)
m_l2_vT_url    <- m_l2_datasets[m_l2_datasets$dataset == ds_list[d],]$path
m_flnm         <- strsplit(m_l2_vT_url,split="dataset=")[[1]][2]
m_flnm         <- stringr::str_replace(m_flnm,"Level2_","")
if(ds_list[d] =="Surface 5m") m_flnm         <- stringr::str_replace(m_flnm,"surface_5m","surface5m")
tmpURL         <- paste0(paste0(ACLIM_data_url,"dodsC/Level2/"),m_flnm,".nc")
# open the netcdf file remotely
nc     <- nc_open(tmpURL)
# available variables:
names(nc$var)
time_steps  <- as.POSIXct(
nc$var[[ sub_varlist[[d]][1] ]]$dim[[3]]$vals,
origin = substr(ncIN$var[["temp"]]$dim[[3]]$units,15,36),
tz = "GMT")
# get years in simulation
yrs    <- sort(unique(substr(time_steps,1,4)))
tmp_tr <-  paste0(yrs,tr)
# subset the lat and lon values
lat    <- ncvar_get(nc, varid = "lat_rho")
lon    <- ncvar_get(nc, varid = "lon_rho")
#M2 <- (56.87°N, -164.06°W)
for(var_get in sub_varlist[[d]]){
# convert the nc files into a long data.frame for each variable
tmp_var      <- get_level2(
ncIN = nc,
varIN = var_get,
# Tinker: try extracting other vars like "NO3", or "uEast"
xi_range  = 1:182,
eta_range = 1:258,
time_range  = tmp_tr)
# rename the object
eval(parse(text =paste0(var_get,"<-tmp_var") ))
# save the nc file in the Data/in/Newest/Rdata/ [ simulation]/Level3 folder
tmp_path <- file.path( paste0("Data/in/Newest/Rdata/",m,"/Level2"),paste0(m_flnm,"_",var_get,".Rdata"))
eval(parse(text =paste0("save(",var_get,", file=tmp_path)")))
eval(parse(text =paste0("rm(",var_get,")") ))
}
# close the nc file
nc_close(nc)
}
}
hind_l3_cat
proj
# copy and paste this into R window (won't work within markdown)
rmd2md(rmd_fl = "GettingStarted_ACLIM_ROMSNPZ_2021v2",md_fl = "README")
