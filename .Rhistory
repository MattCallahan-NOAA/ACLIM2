plotvar   = v,
bcIN      = "raw",
CMIPIN    = CMIPset,
plothist  = T,  # ignore the hist runs
removeyr1 = T))
scenIN    = NULL
GCMIN     = NULL
scenINuse <- scenIN
c<-1
for(c in 1:length(CMIPIN)){
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_operational_hind_mn.Rdata"))
eval(parse(text = paste0("dhindIN_op <- ACLIM_",typeIN,"_hind")))
eval(parse(text = paste0("rm(ACLIM_",typeIN,"_hind)")))
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_hind_mn.Rdata"))
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_hist_mn.Rdata"))
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_fut_mn.Rdata"))
eval(parse(text = paste0("dhindIN <- ACLIM_",typeIN,"_hind")))
eval(parse(text = paste0("dhistIN <- ACLIM_",typeIN,"_hist")))
eval(parse(text = paste0("dfut <- ACLIM_",typeIN,"_fut")))
groupbyIN <- c("year")
if(typeIN == "monthly"){
cat("monthly\n")
months  <- unique(c(dhindIN_op$mo,dhindIN$mo))
seasons <- unique(c(dhindIN_op$season,dhindIN$season))
groupbyIN <- c("year","season","mo")
print(groupbyIN)
}
if(typeIN == "seasonal"){
cat("seasonal\n")
seasons   <- unique(c(dhindIN_op$season,dhindIN$season))
groupbyIN <- c("year","season")
}
if(typeIN == "weekly"){
cat("weekly\n")
weeks <- unique(c(dhindIN_op$wk,dhindIN$wk))
months <- unique(c(dhindIN_op$mo,dhindIN$mo))
seasons <- unique(c(dhindIN_op$season,dhindIN$season))
groupbyIN <- c("year","season","mo","wk")
}
if(removeyr1){
yrin  <- sort(unique(dfut$year))[1]
dfut  <- dfut%>%dplyr::filter(year>yrin)
}
CMIP       <- CMIPIN[c]
if(is.null(scenIN))
scenINuse <- unique(dfut$RCP)
for(s in 1:length(scenINuse)){
if(s ==1){
dhinda <- dhindIN%>%
dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind")%>%
filter(mnDate<=stitchDateIN)
dhind_op <- dhindIN_op%>%
dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind_op")%>%
filter(mnDate>stitchDateIN)
dhind <- rbind(dhinda,dhind_op)
dhist <- dhistIN%>%
dplyr::mutate(scen = scenINuse[s],gcmcmip="hist",GCM2="hist")
}
if(s>1){
dhinda <- dhindIN%>%dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind")%>%
filter(mnDate<=stitchDateIN)
dhind_op <- dhindIN_op%>%dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind_op")%>%
filter(mnDate>stitchDateIN)
dhindb <- rbind(dhinda,dhind_op)
dhind <- rbind(dhind,dhindb)
dhist <- rbind(dhist,dhistIN%>%dplyr::mutate(scen = scenINuse[s],gcmcmip="hist",GCM2="hist"))
}
}
#dhind<-dhind%>%ungroup()%>%group_by(all_of(c("var",groupbyIN)))%>%ungroup()
dhind_op <- dhind%>%filter(GCM2 =="hind_op")
sellist  <- c(groupbyIN,"var","basin", "jday","mnDate","val_raw","mn_val","sd_val", "sim","gcmcmip","GCM",
"GCM2","scen","sim_type")
if(any(dhind_op$var%in%plotvar)){
hind     <- dhind%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind")))%>%
mutate(val_delta = mn_val,val_biascorrected=mn_val)
hist     <- dhist%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(sellist))%>%
mutate(mnVal_hind=NA,val_delta = mn_val,val_biascorrected=mn_val)
fut      <- dfut%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%mutate(GCM2 = GCM,scen=RCP)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind","val_delta","val_biascorrected")))
}else{
# interpolate using "mean"
hind0     <- dhind%>%dplyr::filter(var ==plotvar,basin==plotbasin,GCM2 =="hind")%>%
dplyr::select(all_of(c(sellist,"mnVal_hind")))%>%
mutate(val_delta = mn_val,val_biascorrected=mn_val)
hist     <- dhist%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(sellist))%>%
mutate(mnVal_hind=NA,val_delta = mn_val,val_biascorrected=mn_val)
fut      <- dfut%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%mutate(GCM2 = GCM,scen=RCP)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind","val_delta","val_biascorrected")))
lastyr <- max( hind0%>%select(year))
subyr  <- (-(ifmissingyrs-1):0)+lastyr
maxyr  <- max( dhind_op%>%select(year))
glist <- c(sellist[!sellist%in%c("year","mnDate","jday","mn_val")])
fillyr <- (lastyr+1):maxyr
fillmat <- dhind_op%>%
select(all_of(c(sellist[!sellist%in%c("mn_val","var","sim","GCM2")],"mnVal_hind")))%>%
distinct()%>%mutate(var=plotvar)
mn     <- dhind%>%
dplyr::filter(year%in%subyr)%>%
group_by(across(glist))%>%mutate(GCM2="mean hind")%>%
summarize(mn_val = mean(mn_val, na.rm = T))
hind<- rbind(hind0,fillmat%>%left_join(mn)%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind")))%>%
mutate(val_delta = mn_val,val_biascorrected=mn_val))
# names(dhind)
}
fut  <- fut%>%mutate(val_use=mn_val)
hist <- hist%>%mutate(val_use=mn_val)
hind <- hind%>%mutate(val_use=mn_val)
plotdat    <- rbind(hind,hist,fut)%>%dplyr::mutate(bc = "raw")
hind_bc    <- hind%>%dplyr::mutate(val_use = mn_val, bc="bias corrected")
fut_bc     <- fut%>%dplyr::mutate(val_use = val_delta,bc="bias corrected")
fut_bc     <-rbind(hind_bc,fut_bc)
plotdat          <- rbind(plotdat,fut_bc)
plotdat$bc       <- factor(plotdat$bc, levels =c("raw","bias corrected"))
plotdat$GCM_scen <- paste0(plotdat$GCM,"_",plotdat$scen)
plotdat$GCM_scen_sim  <- paste0(plotdat$GCM,"_",plotdat$scen,"_",plotdat$sim_type)
plotdat$GCM2_scen_sim <- paste0(plotdat$GCM2,"_",plotdat$scen,"_",plotdat$sim_type)
plotdat$CMIP <- CMIPIN[c]
if(c ==1 ){
plotdatout <- plotdat
}else{
plotdatout <- rbind(plotdatout,plotdat)
}
}
stitchDateIN=stitchDate
for(c in 1:length(CMIPIN)){
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_operational_hind_mn.Rdata"))
eval(parse(text = paste0("dhindIN_op <- ACLIM_",typeIN,"_hind")))
eval(parse(text = paste0("rm(ACLIM_",typeIN,"_hind)")))
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_hind_mn.Rdata"))
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_hist_mn.Rdata"))
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_fut_mn.Rdata"))
eval(parse(text = paste0("dhindIN <- ACLIM_",typeIN,"_hind")))
eval(parse(text = paste0("dhistIN <- ACLIM_",typeIN,"_hist")))
eval(parse(text = paste0("dfut <- ACLIM_",typeIN,"_fut")))
groupbyIN <- c("year")
if(typeIN == "monthly"){
cat("monthly\n")
months  <- unique(c(dhindIN_op$mo,dhindIN$mo))
seasons <- unique(c(dhindIN_op$season,dhindIN$season))
groupbyIN <- c("year","season","mo")
print(groupbyIN)
}
if(typeIN == "seasonal"){
cat("seasonal\n")
seasons   <- unique(c(dhindIN_op$season,dhindIN$season))
groupbyIN <- c("year","season")
}
if(typeIN == "weekly"){
cat("weekly\n")
weeks <- unique(c(dhindIN_op$wk,dhindIN$wk))
months <- unique(c(dhindIN_op$mo,dhindIN$mo))
seasons <- unique(c(dhindIN_op$season,dhindIN$season))
groupbyIN <- c("year","season","mo","wk")
}
if(removeyr1){
yrin  <- sort(unique(dfut$year))[1]
dfut  <- dfut%>%dplyr::filter(year>yrin)
}
CMIP       <- CMIPIN[c]
if(is.null(scenIN))
scenINuse <- unique(dfut$RCP)
for(s in 1:length(scenINuse)){
if(s ==1){
dhinda <- dhindIN%>%
dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind")%>%
filter(mnDate<=stitchDateIN)
dhind_op <- dhindIN_op%>%
dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind_op")%>%
filter(mnDate>stitchDateIN)
dhind <- rbind(dhinda,dhind_op)
dhist <- dhistIN%>%
dplyr::mutate(scen = scenINuse[s],gcmcmip="hist",GCM2="hist")
}
if(s>1){
dhinda <- dhindIN%>%dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind")%>%
filter(mnDate<=stitchDateIN)
dhind_op <- dhindIN_op%>%dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind_op")%>%
filter(mnDate>stitchDateIN)
dhindb <- rbind(dhinda,dhind_op)
dhind <- rbind(dhind,dhindb)
dhist <- rbind(dhist,dhistIN%>%dplyr::mutate(scen = scenINuse[s],gcmcmip="hist",GCM2="hist"))
}
}
#dhind<-dhind%>%ungroup()%>%group_by(all_of(c("var",groupbyIN)))%>%ungroup()
dhind_op <- dhind%>%filter(GCM2 =="hind_op")
sellist  <- c(groupbyIN,"var","basin", "jday","mnDate","val_raw","mn_val","sd_val", "sim","gcmcmip","GCM",
"GCM2","scen","sim_type")
if(any(dhind_op$var%in%plotvar)){
hind     <- dhind%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind")))%>%
mutate(val_delta = mn_val,val_biascorrected=mn_val)
hist     <- dhist%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(sellist))%>%
mutate(mnVal_hind=NA,val_delta = mn_val,val_biascorrected=mn_val)
fut      <- dfut%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%mutate(GCM2 = GCM,scen=RCP)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind","val_delta","val_biascorrected")))
}else{
# interpolate using "mean"
hind0     <- dhind%>%dplyr::filter(var ==plotvar,basin==plotbasin,GCM2 =="hind")%>%
dplyr::select(all_of(c(sellist,"mnVal_hind")))%>%
mutate(val_delta = mn_val,val_biascorrected=mn_val)
hist     <- dhist%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(sellist))%>%
mutate(mnVal_hind=NA,val_delta = mn_val,val_biascorrected=mn_val)
fut      <- dfut%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%mutate(GCM2 = GCM,scen=RCP)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind","val_delta","val_biascorrected")))
lastyr <- max( hind0%>%select(year))
subyr  <- (-(ifmissingyrs-1):0)+lastyr
maxyr  <- max( dhind_op%>%select(year))
glist <- c(sellist[!sellist%in%c("year","mnDate","jday","mn_val")])
fillyr <- (lastyr+1):maxyr
fillmat <- dhind_op%>%
select(all_of(c(sellist[!sellist%in%c("mn_val","var","sim","GCM2")],"mnVal_hind")))%>%
distinct()%>%mutate(var=plotvar)
mn     <- dhind%>%
dplyr::filter(year%in%subyr)%>%
group_by(across(glist))%>%mutate(GCM2="mean hind")%>%
summarize(mn_val = mean(mn_val, na.rm = T))
hind<- rbind(hind0,fillmat%>%left_join(mn)%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind")))%>%
mutate(val_delta = mn_val,val_biascorrected=mn_val))
# names(dhind)
}
fut  <- fut%>%mutate(val_use=mn_val)
hist <- hist%>%mutate(val_use=mn_val)
hind <- hind%>%mutate(val_use=mn_val)
plotdat    <- rbind(hind,hist,fut)%>%dplyr::mutate(bc = "raw")
hind_bc    <- hind%>%dplyr::mutate(val_use = mn_val, bc="bias corrected")
fut_bc     <- fut%>%dplyr::mutate(val_use = val_delta,bc="bias corrected")
fut_bc     <-rbind(hind_bc,fut_bc)
plotdat          <- rbind(plotdat,fut_bc)
plotdat$bc       <- factor(plotdat$bc, levels =c("raw","bias corrected"))
plotdat$GCM_scen <- paste0(plotdat$GCM,"_",plotdat$scen)
plotdat$GCM_scen_sim  <- paste0(plotdat$GCM,"_",plotdat$scen,"_",plotdat$sim_type)
plotdat$GCM2_scen_sim <- paste0(plotdat$GCM2,"_",plotdat$scen,"_",plotdat$sim_type)
plotdat$CMIP <- CMIPIN[c]
if(c ==1 ){
plotdatout <- plotdat
}else{
plotdatout <- rbind(plotdatout,plotdat)
}
}
for(c in 1:length(CMIPIN)){
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_operational_hind_mn.Rdata"))
eval(parse(text = paste0("dhindIN_op <- ACLIM_",typeIN,"_hind")))
eval(parse(text = paste0("rm(ACLIM_",typeIN,"_hind)")))
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_hind_mn.Rdata"))
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_hist_mn.Rdata"))
load(paste0("Data/out/",CMIPIN[c],"/allEBS_means/ACLIM_",typeIN,"_fut_mn.Rdata"))
eval(parse(text = paste0("dhindIN <- ACLIM_",typeIN,"_hind")))
eval(parse(text = paste0("dhistIN <- ACLIM_",typeIN,"_hist")))
eval(parse(text = paste0("dfut <- ACLIM_",typeIN,"_fut")))
groupbyIN <- c("year")
if(typeIN == "monthly"){
cat("monthly\n")
months  <- unique(c(dhindIN_op$mo,dhindIN$mo))
seasons <- unique(c(dhindIN_op$season,dhindIN$season))
groupbyIN <- c("year","season","mo")
print(groupbyIN)
}
if(typeIN == "seasonal"){
cat("seasonal\n")
seasons   <- unique(c(dhindIN_op$season,dhindIN$season))
groupbyIN <- c("year","season")
}
if(typeIN == "weekly"){
cat("weekly\n")
weeks <- unique(c(dhindIN_op$wk,dhindIN$wk))
months <- unique(c(dhindIN_op$mo,dhindIN$mo))
seasons <- unique(c(dhindIN_op$season,dhindIN$season))
groupbyIN <- c("year","season","mo","wk")
}
if(removeyr1){
yrin  <- sort(unique(dfut$year))[1]
dfut  <- dfut%>%dplyr::filter(year>yrin)
}
CMIP       <- CMIPIN[c]
if(is.null(scenIN))
scenINuse <- unique(dfut$RCP)
for(s in 1:length(scenINuse)){
if(s ==1){
dhinda <- dhindIN%>%
dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind")%>%
filter(mnDate<=stitchDateIN)
dhind_op <- dhindIN_op%>%
dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind_op")%>%
filter(mnDate>stitchDateIN)
dhind <- rbind(dhinda,dhind_op)
dhist <- dhistIN%>%
dplyr::mutate(scen = scenINuse[s],gcmcmip="hist",GCM2="hist")
}
if(s>1){
dhinda <- dhindIN%>%dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind")%>%
filter(mnDate<=stitchDateIN)
dhind_op <- dhindIN_op%>%dplyr::mutate(scen = scenINuse[s],gcmcmip="hind",GCM ="hind",GCM2="hind_op")%>%
filter(mnDate>stitchDateIN)
dhindb <- rbind(dhinda,dhind_op)
dhind <- rbind(dhind,dhindb)
dhist <- rbind(dhist,dhistIN%>%dplyr::mutate(scen = scenINuse[s],gcmcmip="hist",GCM2="hist"))
}
}
#dhind<-dhind%>%ungroup()%>%group_by(all_of(c("var",groupbyIN)))%>%ungroup()
dhind_op <- dhind%>%filter(GCM2 =="hind_op")
sellist  <- c(groupbyIN,"var","basin", "jday","mnDate","val_raw","mn_val","sd_val", "sim","gcmcmip","GCM",
"GCM2","scen","sim_type")
if(any(dhind_op$var%in%plotvar)){
hind     <- dhind%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind")))%>%
mutate(val_delta = mn_val,val_biascorrected=mn_val)
hist     <- dhist%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(sellist))%>%
mutate(mnVal_hind=NA,val_delta = mn_val,val_biascorrected=mn_val)
fut      <- dfut%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%mutate(GCM2 = GCM,scen=RCP)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind","val_delta","val_biascorrected")))
}else{
# interpolate using "mean"
hind0     <- dhind%>%dplyr::filter(var ==plotvar,basin==plotbasin,GCM2 =="hind")%>%
dplyr::select(all_of(c(sellist,"mnVal_hind")))%>%
mutate(val_delta = mn_val,val_biascorrected=mn_val)
hist     <- dhist%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(sellist))%>%
mutate(mnVal_hind=NA,val_delta = mn_val,val_biascorrected=mn_val)
fut      <- dfut%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%mutate(GCM2 = GCM,scen=RCP)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind","val_delta","val_biascorrected")))
lastyr <- max( hind0%>%select(year))
subyr  <- (-(ifmissingyrs-1):0)+lastyr
maxyr  <- max( dhind_op%>%select(year))
glist <- c(sellist[!sellist%in%c("year","mnDate","jday","mn_val")])
fillyr <- (lastyr+1):maxyr
fillmat <- dhind_op%>%
select(all_of(c(sellist[!sellist%in%c("mn_val","var","sim","GCM2")],"mnVal_hind")))%>%
distinct()%>%mutate(var=plotvar)
mn     <- dhind%>%
dplyr::filter(year%in%subyr)%>%
group_by(across(glist))%>%mutate(GCM2="mean hind")%>%
summarize(mn_val = mean(mn_val, na.rm = T))
hind<- rbind(hind0,fillmat%>%left_join(mn)%>%dplyr::filter(var ==plotvar,basin==plotbasin)%>%
dplyr::select(all_of(c(sellist,"mnVal_hind")))%>%
mutate(val_delta = mn_val,val_biascorrected=mn_val))
# names(dhind)
}
fut  <- fut%>%mutate(val_use=mn_val)
hist <- hist%>%mutate(val_use=mn_val)
hind <- hind%>%mutate(val_use=mn_val)
plotdat    <- rbind(hind,hist,fut)%>%dplyr::mutate(bc = "raw")
hind_bc    <- hind%>%dplyr::mutate(val_use = mn_val, bc="bias corrected")
fut_bc     <- fut%>%dplyr::mutate(val_use = val_delta,bc="bias corrected")
fut_bc     <-rbind(hind_bc,fut_bc)
plotdat          <- rbind(plotdat,fut_bc)
plotdat$bc       <- factor(plotdat$bc, levels =c("raw","bias corrected"))
plotdat$GCM_scen <- paste0(plotdat$GCM,"_",plotdat$scen)
plotdat$GCM_scen_sim  <- paste0(plotdat$GCM,"_",plotdat$scen,"_",plotdat$sim_type)
plotdat$GCM2_scen_sim <- paste0(plotdat$GCM2,"_",plotdat$scen,"_",plotdat$sim_type)
plotdat$CMIP <- CMIPIN[c]
if(c ==1 ){
plotdatout <- plotdat
}else{
plotdatout <- rbind(plotdatout,plotdat)
}
}
if(is.null(scenIN))
scenINuse <- unique(plotdatout$scen)
if(is.null(GCMIN))
GCMIN <- unique(plotdatout$GCM)
gcmlist<- c("hind",GCMIN)
if(plothist)
gcmlist<- c("hind","hist",GCMIN)
bcIN
head(plotdatout$bc)
raw <-plotdatout%>%dplyr::filter(
scen%in%scenINuse,GCM%in%gcmlist,
bc%in%bcIN)
adj <-plotdatout%>%dplyr::filter(
scen%in%scenINuse,GCM%in%gcmlist,
bc%in%"bias corrected")
names(plotdatout)
mean(raw$val_use)
mean(raw$val_raw)
mean(adj$val_raw)
mean(adj$val_use)
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/get_var.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/get_var_ophind.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_scripts/make_NRS_indices.R", echo=TRUE)
source("D:/GitHub_cloud/ACLIM2/R/sub_scripts/make_NRS_indices_raw.R", echo=TRUE)
source("R/sub_scripts/make_NRS_indices.R")
source("R/sub_scripts/make_NRS_indices_raw.R")
ls()
head(NRS_vars_op)
head(NRS_vars_wide_op%>%filter(var=="fracbelow2"))
# rm(list=ls())
suppressMessages(source("R/make.R"))
CMIPset <- c("K20P19_CMIP6","K20P19_CMIP5")
# preview possible variables
load(file = "Data/out/weekly_vars.Rdata")
load(file = "Data/out/srvy_vars.Rdata")
load(paste0("Data/out/K20P19_CMIP6/allEBS_means/ACLIM_annual_hind_mn.Rdata"))
varall  <- unique(ACLIM_annual_hind$var)
# varall
load(paste0("Data/out/K20P19_CMIP6/allEBS_means/ACLIM_annual_fut_mn.Rdata"))
load(paste0("Data/out/K20P19_CMIP6/allEBS_means/ACLIM_surveyrep_fut_mn.Rdata"))
stitchDate     <- "2019-12-30"  # last date of the ACLIM hindcast
stitchDate_op  <- "2022-05-16"  #last operational hindcast date
# scens   <- c("ssp126", "ssp585")
# GCMs    <- c("miroc", "gfdl", "cesm" )
# Now compile the NRS indices:
#--------------------------------------
grpby <- c("type","var","basin",
"year","sim","gcmcmip","GCM","scen","sim_type",
"bc","GCM_scen","GCM_scen_sim", "CMIP" )
sumat  <- c("jday","mnDate","val_use","mnVal_hind",
"val_delta","val_biascorrected","val_raw")
# make NRS_indices.csv using the ACLIM hindcast only as well as
#      NRS_indices_op.csv, the operational hindcast filled in for 2019-2022
varlist <- c("vNorth_surface5m","uEast_surface5m")
i <- 0
head(NRS_vars_wide_op%>%filter(var=="fracbelow2"))
v
i<- i + 1
cat("compiling indices : ",v,"\n")
# get the variable you want:
df <- get_var( typeIN    = "monthly",
monthIN   = 4:6,
plotbasin  = c("SEBS"),
plotvar   = v,
bcIN      = "raw",
CMIPIN    = CMIPset,
plothist  = T,  # ignore the hist runs
removeyr1 = T)  # "Remove first year of proj ( burn in)")
tmpd <- df$dat%>%
group_by(across(all_of(grpby)))%>%
summarize_at(all_of(sumat), mean, na.rm=T)%>%
mutate(mn_val=val_use)%>%ungroup()
getwd()
dir()
dir("Data")
dir("Data/in")
dir("Data/in")
# rm(list=ls())
suppressMessages(source("R/make.R"))
CMIPset <- c("K20P19_CMIP6","K20P19_CMIP5")
# preview possible variables
load(file = "Data/out/weekly_vars.Rdata")
load(file = "Data/out/srvy_vars.Rdata")
load(paste0("Data/out/K20P19_CMIP6/allEBS_means/ACLIM_annual_hind_mn.Rdata"))
varall  <- unique(ACLIM_annual_hind$var)
# varall
load(paste0("Data/out/K20P19_CMIP6/allEBS_means/ACLIM_annual_fut_mn.Rdata"))
load(paste0("Data/out/K20P19_CMIP6/allEBS_means/ACLIM_surveyrep_fut_mn.Rdata"))
stitchDate     <- "2019-12-30"  # last date of the ACLIM hindcast
stitchDate_op  <- "2022-05-16"  #last operational hindcast date
# scens   <- c("ssp126", "ssp585")
# GCMs    <- c("miroc", "gfdl", "cesm" )
# Now compile the NRS indices:
#--------------------------------------
grpby <- c("type","var","basin",
"year","sim","gcmcmip","GCM","scen","sim_type",
"bc","GCM_scen","GCM_scen_sim", "CMIP" )
sumat  <- c("jday","mnDate","val_use","mnVal_hind",
"val_delta","val_biascorrected","val_raw")
# make NRS_indices.csv using the ACLIM hindcast only as well as
#      NRS_indices_op.csv, the operational hindcast filled in for 2019-2022
varlist <- c("vNorth_surface5m","uEast_surface5m")
i <- 0
v
rm(list=ls())
# rm(list=ls())
suppressMessages(source("R/make.R"))
CMIPset <- c("K20P19_CMIP6","K20P19_CMIP5")
# preview possible variables
load(file = "Data/out/weekly_vars.Rdata")
load(file = "Data/out/srvy_vars.Rdata")
load(paste0("Data/out/K20P19_CMIP6/allEBS_means/ACLIM_annual_hind_mn.Rdata"))
varall  <- unique(ACLIM_annual_hind$var)
# varall
load(paste0("Data/out/K20P19_CMIP6/allEBS_means/ACLIM_annual_fut_mn.Rdata"))
load(paste0("Data/out/K20P19_CMIP6/allEBS_means/ACLIM_surveyrep_fut_mn.Rdata"))
stitchDate     <- "2019-12-30"  # last date of the ACLIM hindcast
stitchDate_op  <- "2022-05-16"  #last operational hindcast date
# scens   <- c("ssp126", "ssp585")
# GCMs    <- c("miroc", "gfdl", "cesm" )
# Now compile the NRS indices:
#--------------------------------------
grpby <- c("type","var","basin",
"year","sim","gcmcmip","GCM","scen","sim_type",
"bc","GCM_scen","GCM_scen_sim", "CMIP" )
sumat  <- c("jday","mnDate","val_use","mnVal_hind",
"val_delta","val_biascorrected","val_raw")
# make NRS_indices.csv using the ACLIM hindcast only as well as
#      NRS_indices_op.csv, the operational hindcast filled in for 2019-2022
varlist <- c("vNorth_surface5m","uEast_surface5m")
i <- 0
v
v<-varlist[1]
v
i<- i + 1
cat("compiling indices : ",v,"\n")
# get the variable you want:
df <- get_var( typeIN    = "monthly",
monthIN   = 4:6,
plotbasin  = c("SEBS"),
plotvar   = v,
bcIN      = "raw",
CMIPIN    = CMIPset,
plothist  = T,  # ignore the hist runs
removeyr1 = T)  # "R
rm(list=ls())
suppressMessages(source("R/make.R"))
dir("R")
