# add in largeZoop (gets generated in make_indices_region_new.R)
vl <- c(unique(c(vl1,vl2)),"largeZoop_integrated")
# Identify which variables would be normally
# distributed (i.e., can have negative values)
normvl <- c( vl[grep("pH",vl)],
vl[grep("temp",vl)],
vl[grep("Ben",vl)],
vl[grep("Hsbl",vl)],
vl[grep("shflux",vl)],
vl[grep("ssflux",vl)],
vl[grep("vNorth",vl)],
vl[grep("uEast",vl)])
normlist <- data.frame(var = vl, lognorm = "none",stringsAsFactors = F)
normlist$lognorm[!normlist$var%in%normvl]   <- "log"
normlist$lognorm[normlist$var%in%
c( vl[grep("aice",vl)],
vl[grep("fracbelow0",vl)],
vl[grep("fracbelow1",vl)],
vl[grep("fracbelow2",vl)])]  <- "logit"
sv_bc    <- c("largeZoop_integrated","fracbelow2",
"temp_bottom5m","temp_surface5m","pH_depthavg")
sv_bc <- NULL  # bias correct all indices
weekly_vars <- c(weekly_vars,"largeZoop_integrated")
srvy_vars <- c(srvy_vars,"largeZoop_integrated")
save(normlist,file      = file.path(Rdata_path,"normlist.Rdata"))
write.csv(normlist,file = file.path(Rdata_path,"normlist.csv"))
save(weekly_vars,file   = "Data/out/weekly_vars.Rdata")
save(srvy_vars,file     = "Data/out/srvy_vars.Rdata")
write.csv(normlist,file = file.path("Data/out/","normlist.csv"))
# generate indices and bias corrected projections
# this takes about 30 mins each
# -------------------------------------------
# CMIP6 K20P19
# -------------------------------------------
gcmcmipL <- c("B10K-K20P19_CMIP6_miroc",
"B10K-K20P19_CMIP6_gfdl",
"B10K-K20P19_CMIP6_cesm")
# make bc indices for strata specific values:
tmp <- suppressMessages(makeACLIM2_BC_Indices_new(
bystrata  = TRUE,
BC_target = "mn_val",
ref_yrsIN = 1980:2013,
sv = sv_bc,
smoothIT  = TRUE,
CMIP_fdlr ="K20P19_CMIP6",
scenIN    = c("ssp126","ssp585"),
hind_sim  =  "B10K-K20P19_CORECFS",
histLIST  = paste0(gcmcmipL,"_historical"),
gcmcmipLIST  = gcmcmipL,
usehist      = TRUE,
Rdata_pathIN = file.path(Rdata_path,"roms_for_public"),
regnm        = "ACLIMregion",
srvynm       = "ACLIMsurveyrep",
normlist_IN  = normlist,
sim_listIN   = sim_list[-grep("historical",sim_list)],
gcinfoIN     = FALSE))
# fn <-"ACLIMregion_B10K-K20P19_CMIP6_cesm_ssp585_BC_fut.Rdata"
# load(file.path("Data/out","K20P19_CMIP6","BC_ACLIMregion",fn))
rplc_bcplot <-TRUE
source("R/sub_scripts/plot_BC_stratawk.R")
tmp <- suppressMessages(makeACLIM2_BC_Indices_new(
bystrata  = TRUE,
BC_target = "mn_val",
ref_yrsIN = 1980:2013,
sv = sv_bc,
smoothIT  = TRUE,
CMIP_fdlr ="K20P19_CMIP6",
scenIN    = c("ssp126","ssp585"),
hind_sim  =  "B10K-K20P19_CORECFS",
histLIST  = paste0(gcmcmipL,"_historical"),
gcmcmipLIST  = gcmcmipL,
usehist      = TRUE,
Rdata_pathIN = file.path(Rdata_path,"roms_for_public"),
regnm        = "ACLIMregion",
srvynm       = "ACLIMsurveyrep",
normlist_IN  = normlist,
sim_listIN   = sim_list[-grep("historical",sim_list)],
gcinfoIN     = FALSE))
traceback()
hnd
gc()
?time
timestamp
timestamp()
##------ Fri Mar 03 20:49:56 2023 ------##
a<-timestamp()
##------ Fri Mar 03 20:50:04 2023 ------##
timestamp()-a
##------ Fri Mar 03 20:50:09 2023 ------##
?time
a<-system.time
a
a<-system.time()
a
a<-Sys.time
a
a<-Sys.time()
a
Sys.time()-a
attach(list(
bystrata  = TRUE,
BC_target = "mn_val",
ref_yrsIN = 1980:2013,
sv = sv_bc,
smoothIT  = TRUE,
CMIP_fdlr ="K20P19_CMIP6",
scenIN    = c("ssp126","ssp585"),
hind_sim  =  "B10K-K20P19_CORECFS",
histLIST  = paste0(gcmcmipL,"_historical"),
gcmcmipLIST  = gcmcmipL,
usehist      = TRUE,
Rdata_pathIN = file.path(Rdata_path,"roms_for_public"),
regnm        = "ACLIMregion",
srvynm       = "ACLIMsurveyrep",
normlist_IN  = normlist,
sim_listIN   = sim_list[-grep("historical",sim_list)],
gcinfoIN     = FALSE))
reg_txtIN  = paste0("Level3/",regnm,"_")
srvy_txtIN = paste0("Level3/",srvynm,"_")
gcinfo(gcinfoIN)
# ------------------------------------
# 1  -- Create indices from Hindcast
cat("-- Starting analysis...\n")
# load the Hindcast:
# -------------------------
cat("    -- making hindcast indices....\n")
sim  <- hind_sim
# Load data
cat("-------------------------\n Get hindcast indices \n------------------------\n")
cat("Load data \n")
if(bystrata) {
cat(" -- loading hnd\n")
load(file.path(Rdata_pathIN,file.path(sim,paste0(reg_txtIN,sim,".Rdata"))))
eval(parse(text=paste0("hnd       <- ",regnm,"; rm(",regnm,")")))
gc()
if(is.null(sv))
sv <- unique(normlist_IN$var)
subtxt <- regnm
}else{
cat(" -- loading hnd_srvy: ",file.path(Rdata_pathIN,file.path(sim,paste0(srvy_txtIN,sim,".Rdata"))),"\n")
load(file.path(Rdata_pathIN,file.path(sim,paste0(srvy_txtIN,sim,".Rdata"))))
eval(parse(text=paste0("hnd_srvy  <- ",srvynm,"; rm(",srvynm,")")))
gc()
if(is.null(sv))
sv <-  unique(normlist_IN$var)
subtxt <- srvynm
}
# Get Indices:
# -------------------------
cat(" -- Get indices \n")
names(hnd)
dim(hnd%>%filter(var==vv))
vv<-unique(hnd$var)
vv
vv<-vv[1]
dim(hnd%>%filter(var==vv))
dim(hnd)
length(unique(hnd$strata))
tmphindA <- suppressMessages(make_indices_strata(
simIN = hnd%>%filter(var==vv),
svIN = sv,
timeblockIN = c("strata","strata_area_km2",
"yr","season","mo","wk"),
seasonsIN  = seasons,
type       = "strata weekly means",
typeIN     =  "hind", #"hist" "proj"
ref_yrs    = ref_yrsIN,
normlistIN = normlist_IN,
group_byIN = c("var","lognorm","basin","strata","strata_area_km2","season","mo","wk"),
smoothIT     = smoothIT,
log_adj    = 1e-4))
gc()
tmp <- suppressMessages(makeACLIM2_BC_Indices_new(
bystrata  = TRUE,
BC_target = "mn_val",
ref_yrsIN = 1980:2013,
sv = sv_bc,
smoothIT  = TRUE,
CMIP_fdlr ="K20P19_CMIP6",
scenIN    = c("ssp126","ssp585"),
hind_sim  =  "B10K-K20P19_CORECFS",
histLIST  = paste0(gcmcmipL,"_historical"),
gcmcmipLIST  = gcmcmipL,
usehist      = TRUE,
Rdata_pathIN = file.path(Rdata_path,"roms_for_public"),
regnm        = "ACLIMregion",
srvynm       = "ACLIMsurveyrep",
normlist_IN  = normlist,
sim_listIN   = sim_list[-grep("historical",sim_list)],
gcinfoIN     = FALSE))
# --------------------------------------
# SETUP WORKSPACE
# rm(list=ls())
# setwd("D:/GitHub_cloud/ACLIM2")
# setwd("/Volumes/LaCie/GitHub_cloud/ACLIM2")
# loads packages, data, setup, etc.
tmstp       <- "2022_10_17"
update_biascorrection <- FALSE
suppressMessages(source("R/make.R"))
tmstp       <- "2022_10_17"
Rdata_path  <- paste0("../../romsnpz/",tmstp,"_Rdata")
main        <- getwd()  #"~/GitHub_new/ACLIM2"
tmstamp1    <- format(Sys.time(), "%Y%m%d")
update_hind  <- TRUE   # set to true to update hind
update_hist  <- TRUE   # set to true to update hist
update_proj  <- TRUE   # set to true to update fut
# the reference years for bias correcting in R/setup.R
ref_years
# the year to z-score scale / delta in R/setup.R
deltayrs
data_path
#load(file.path(Rdata_path,"../weekly_vars_C.Rdata"))
load(file.path(Rdata_path,"weekly_vars.Rdata"))
#load(file.path(Rdata_path,"../srvy_vars_C.Rdata"))
load(file.path(Rdata_path,"srvy_vars.Rdata"))
load(file.path(Rdata_path,"l3srvy_varlist.Rdata"))
load(file.path(Rdata_path,"l3wk_varlist.Rdata"))
load(file.path(Rdata_path,"l3srvy_varlist_H16.Rdata"))
load(file.path(Rdata_path,"l3wk_varlist_H16.Rdata"))
load(file.path(Rdata_path,"l2_vars.Rdata"))
vl1   <- l3srvy_varlist #srvy_vars[!srvy_vars%in%rm_var_list]
vl2   <- l3wk_varlist# weekly_vars[!weekly_vars%in%rm_wk_list]
# add in largeZoop (gets generated in make_indices_region_new.R)
vl <- c(unique(c(vl1,vl2)),"largeZoop_integrated")
# Identify which variables would be normally
# distributed (i.e., can have negative values)
normvl <- c( vl[grep("pH",vl)],
vl[grep("temp",vl)],
#vl[grep("Ben",vl)],
vl[grep("Hsbl",vl)],
vl[grep("shflux",vl)],
vl[grep("ssflux",vl)],
vl[grep("vNorth",vl)],
vl[grep("uEast",vl)])
normlist <- data.frame(var = vl, lognorm = "none",stringsAsFactors = F)
normlist$lognorm[!normlist$var%in%normvl]   <- "log"
normlist$lognorm[normlist$var%in%
c( vl[grep("aice",vl)],
vl[grep("fracbelow0",vl)],
vl[grep("fracbelow1",vl)],
vl[grep("fracbelow2",vl)])]  <- "logit"
sv_bc    <- c("largeZoop_integrated","fracbelow2",
"temp_bottom5m","temp_surface5m","pH_depthavg")
sv_bc <- NULL  # bias correct all indices
weekly_vars <- c(weekly_vars,"largeZoop_integrated")
srvy_vars <- c(srvy_vars,"largeZoop_integrated")
save(normlist,file      = file.path(Rdata_path,"normlist.Rdata"))
write.csv(normlist,file = file.path(Rdata_path,"normlist.csv"))
save(weekly_vars,file   = "Data/out/weekly_vars.Rdata")
save(srvy_vars,file     = "Data/out/srvy_vars.Rdata")
write.csv(normlist,file = file.path("Data/out/","normlist.csv"))
# generate indices and bias corrected projections
# this takes about 30 mins each
# -------------------------------------------
# CMIP6 K20P19
# -------------------------------------------
gcmcmipL <- c("B10K-K20P19_CMIP6_miroc",
"B10K-K20P19_CMIP6_gfdl",
"B10K-K20P19_CMIP6_cesm")
# make bc indices for strata specific values:
gc()
tmp <- suppressMessages(makeACLIM2_BC_Indices_new(
bystrata  = TRUE,
BC_target = "mn_val",
ref_yrsIN = 1980:2013,
sv         = sv_bc,
updateHist = update_hist,
updateHind = update_hind,
smoothIT  = TRUE,
sfIN      = "val_delta",
CMIP_fdlr ="K20P19_CMIP6",
scenIN    = c("ssp126","ssp585"),
hind_sim  =  "B10K-K20P19_CORECFS",
histLIST  = paste0(gcmcmipL,"_historical"),
gcmcmipLIST  = gcmcmipL,
usehist      = TRUE,
Rdata_pathIN = file.path(Rdata_path,"roms_for_public"),
regnm        = "ACLIMregion",
srvynm       = "ACLIMsurveyrep",
normlist_IN  = normlist,
sim_listIN   = sim_list[-grep("historical",sim_list)],
gcinfoIN     = FALSE))
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_hind.R")
# --------------------------------------
# SETUP WORKSPACE
# rm(list=ls())
# setwd("D:/GitHub_cloud/ACLIM2")
# setwd("/Volumes/LaCie/GitHub_cloud/ACLIM2")
# loads packages, data, setup, etc.
tmstp       <- "2022_10_17"
update_biascorrection <- FALSE
suppressMessages(source("R/make.R"))
tmstp       <- "2022_10_17"
Rdata_path  <- paste0("../../romsnpz/",tmstp,"_Rdata")
main        <- getwd()  #"~/GitHub_new/ACLIM2"
tmstamp1    <- format(Sys.time(), "%Y%m%d")
update_hind  <- TRUE   # set to true to update hind
update_hist  <- TRUE   # set to true to update hist
update_proj  <- TRUE   # set to true to update fut
# the reference years for bias correcting in R/setup.R
ref_years
# the year to z-score scale / delta in R/setup.R
deltayrs
data_path
#load(file.path(Rdata_path,"../weekly_vars_C.Rdata"))
load(file.path(Rdata_path,"weekly_vars.Rdata"))
#load(file.path(Rdata_path,"../srvy_vars_C.Rdata"))
load(file.path(Rdata_path,"srvy_vars.Rdata"))
load(file.path(Rdata_path,"l3srvy_varlist.Rdata"))
load(file.path(Rdata_path,"l3wk_varlist.Rdata"))
load(file.path(Rdata_path,"l3srvy_varlist_H16.Rdata"))
load(file.path(Rdata_path,"l3wk_varlist_H16.Rdata"))
load(file.path(Rdata_path,"l2_vars.Rdata"))
vl1   <- l3srvy_varlist #srvy_vars[!srvy_vars%in%rm_var_list]
vl2   <- l3wk_varlist# weekly_vars[!weekly_vars%in%rm_wk_list]
# add in largeZoop (gets generated in make_indices_region_new.R)
vl <- c(unique(c(vl1,vl2)),"largeZoop_integrated")
# Identify which variables would be normally
# distributed (i.e., can have negative values)
normvl <- c( vl[grep("pH",vl)],
vl[grep("temp",vl)],
#vl[grep("Ben",vl)],
vl[grep("Hsbl",vl)],
vl[grep("shflux",vl)],
vl[grep("ssflux",vl)],
vl[grep("vNorth",vl)],
vl[grep("uEast",vl)])
normlist <- data.frame(var = vl, lognorm = "none",stringsAsFactors = F)
normlist$lognorm[!normlist$var%in%normvl]   <- "log"
normlist$lognorm[normlist$var%in%
c( vl[grep("aice",vl)],
vl[grep("fracbelow0",vl)],
vl[grep("fracbelow1",vl)],
vl[grep("fracbelow2",vl)])]  <- "logit"
sv_bc    <- c("largeZoop_integrated","fracbelow2",
"temp_bottom5m","temp_surface5m","pH_depthavg")
sv_bc <- NULL  # bias correct all indices
weekly_vars <- c(weekly_vars,"largeZoop_integrated")
srvy_vars <- c(srvy_vars,"largeZoop_integrated")
save(normlist,file      = file.path(Rdata_path,"normlist.Rdata"))
write.csv(normlist,file = file.path(Rdata_path,"normlist.csv"))
save(weekly_vars,file   = "Data/out/weekly_vars.Rdata")
save(srvy_vars,file     = "Data/out/srvy_vars.Rdata")
write.csv(normlist,file = file.path("Data/out/","normlist.csv"))
# generate indices and bias corrected projections
# this takes about 30 mins each
# -------------------------------------------
# CMIP6 K20P19
# -------------------------------------------
gcmcmipL <- c("B10K-K20P19_CMIP6_miroc",
"B10K-K20P19_CMIP6_gfdl",
"B10K-K20P19_CMIP6_cesm")
# make bc indices for strata specific values:
gc()
tmp <- suppressMessages(makeACLIM2_BC_Indices_new(
bystrata  = TRUE,
BC_target = "mn_val",
ref_yrsIN = 1980:2013,
sv         = sv_bc,
updateHist = update_hist,
updateHind = update_hind,
smoothIT  = TRUE,
sfIN      = "val_delta",
CMIP_fdlr ="K20P19_CMIP6",
scenIN    = c("ssp126","ssp585"),
hind_sim  =  "B10K-K20P19_CORECFS",
histLIST  = paste0(gcmcmipL,"_historical"),
gcmcmipLIST  = gcmcmipL,
usehist      = TRUE,
Rdata_pathIN = file.path(Rdata_path,"roms_for_public"),
regnm        = "ACLIMregion",
srvynm       = "ACLIMsurveyrep",
normlist_IN  = normlist,
sim_listIN   = sim_list[-grep("historical",sim_list)],
gcinfoIN     = FALSE))
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/makeACLIM2_BC_Indices_new2.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/makeACLIM2_BC_Indices_new2.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_proj.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/makeACLIM2_BC_Indices_new2.R")
# --------------------------------------
# SETUP WORKSPACE
# rm(list=ls())
# setwd("D:/GitHub_cloud/ACLIM2")
# setwd("/Volumes/LaCie/GitHub_cloud/ACLIM2")
# loads packages, data, setup, etc.
tmstp       <- "2022_10_17"
update_biascorrection <- FALSE
suppressMessages(source("R/make.R"))
tmstp       <- "2022_10_17"
Rdata_path  <- paste0("../../romsnpz/",tmstp,"_Rdata")
main        <- getwd()  #"~/GitHub_new/ACLIM2"
tmstamp1    <- format(Sys.time(), "%Y%m%d")
update_hind  <- TRUE   # set to true to update hind
update_hist  <- TRUE   # set to true to update hist
update_proj  <- TRUE   # set to true to update fut
# the reference years for bias correcting in R/setup.R
ref_years
# the year to z-score scale / delta in R/setup.R
deltayrs
data_path
#load(file.path(Rdata_path,"../weekly_vars_C.Rdata"))
load(file.path(Rdata_path,"weekly_vars.Rdata"))
#load(file.path(Rdata_path,"../srvy_vars_C.Rdata"))
load(file.path(Rdata_path,"srvy_vars.Rdata"))
load(file.path(Rdata_path,"l3srvy_varlist.Rdata"))
load(file.path(Rdata_path,"l3wk_varlist.Rdata"))
load(file.path(Rdata_path,"l3srvy_varlist_H16.Rdata"))
load(file.path(Rdata_path,"l3wk_varlist_H16.Rdata"))
load(file.path(Rdata_path,"l2_vars.Rdata"))
vl1   <- l3srvy_varlist #srvy_vars[!srvy_vars%in%rm_var_list]
vl2   <- l3wk_varlist# weekly_vars[!weekly_vars%in%rm_wk_list]
# add in largeZoop (gets generated in make_indices_region_new.R)
vl <- c(unique(c(vl1,vl2)),"largeZoop_integrated")
# Identify which variables would be normally
# distributed (i.e., can have negative values)
normvl <- c( vl[grep("pH",vl)],
vl[grep("temp",vl)],
#vl[grep("Ben",vl)],
vl[grep("Hsbl",vl)],
vl[grep("shflux",vl)],
vl[grep("ssflux",vl)],
vl[grep("vNorth",vl)],
vl[grep("uEast",vl)])
normlist <- data.frame(var = vl, lognorm = "none",stringsAsFactors = F)
normlist$lognorm[!normlist$var%in%normvl]   <- "log"
normlist$lognorm[normlist$var%in%
c( vl[grep("aice",vl)],
vl[grep("fracbelow0",vl)],
vl[grep("fracbelow1",vl)],
vl[grep("fracbelow2",vl)])]  <- "logit"
sv_bc    <- c("largeZoop_integrated","fracbelow2",
"temp_bottom5m","temp_surface5m","pH_depthavg")
sv_bc <- NULL  # bias correct all indices
weekly_vars <- c(weekly_vars,"largeZoop_integrated")
srvy_vars <- c(srvy_vars,"largeZoop_integrated")
save(normlist,file      = file.path(Rdata_path,"normlist.Rdata"))
write.csv(normlist,file = file.path(Rdata_path,"normlist.csv"))
save(weekly_vars,file   = "Data/out/weekly_vars.Rdata")
save(srvy_vars,file     = "Data/out/srvy_vars.Rdata")
write.csv(normlist,file = file.path("Data/out/","normlist.csv"))
# generate indices and bias corrected projections
# this takes about 30 mins each
# -------------------------------------------
# CMIP6 K20P19
# -------------------------------------------
gcmcmipL <- c("B10K-K20P19_CMIP6_miroc",
"B10K-K20P19_CMIP6_gfdl",
"B10K-K20P19_CMIP6_cesm")
# make bc indices for strata specific values:
gc()
tmp <- suppressMessages(makeACLIM2_BC_Indices_new(
bystrata  = TRUE,
BC_target = "mn_val",
ref_yrsIN = 1980:2013,
sv         = sv_bc,
updateHist = FALSE, # update_hist,
updateHind = FALSE, #update_hind,
smoothIT  = TRUE,
sfIN      = "val_delta",
CMIP_fdlr ="K20P19_CMIP6",
scenIN    = c("ssp126","ssp585"),
hind_sim  =  "B10K-K20P19_CORECFS",
histLIST  = paste0(gcmcmipL,"_historical"),
gcmcmipLIST  = gcmcmipL,
usehist      = TRUE,
Rdata_pathIN = file.path(Rdata_path,"roms_for_public"),
regnm        = "ACLIMregion",
srvynm       = "ACLIMsurveyrep",
normlist_IN  = normlist,
sim_listIN   = sim_list[-grep("historical",sim_list)],
gcinfoIN     = FALSE))
names(fut_start)
names(fut_tmp)
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_proj.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_proj.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_proj.R")
gc()
gc()
tmp <- suppressMessages(makeACLIM2_BC_Indices_new(
bystrata  = TRUE,
BC_target = "mn_val",
ref_yrsIN = 1980:2013,
sv         = sv_bc,
updateHist = FALSE, # update_hist,
updateHind = FALSE, #update_hind,
smoothIT  = TRUE,
sfIN      = "val_delta",
CMIP_fdlr ="K20P19_CMIP6",
scenIN    = c("ssp126","ssp585"),
hind_sim  =  "B10K-K20P19_CORECFS",
histLIST  = paste0(gcmcmipL,"_historical"),
gcmcmipLIST  = gcmcmipL,
usehist      = TRUE,
Rdata_pathIN = file.path(Rdata_path,"roms_for_public"),
regnm        = "ACLIMregion",
srvynm       = "ACLIMsurveyrep",
normlist_IN  = normlist,
sim_listIN   = sim_list[-grep("historical",sim_list)],
gcinfoIN     = FALSE))
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_hind.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_hind.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_hist.R")
gc(full=TRUE)
gc()
gc()
gc()
gc()
gc()
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_proj.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_proj.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_proj.R")
source("D:/GitHub_cloud/ACLIM2/R/sub_fun/sub_get_proj.R")
